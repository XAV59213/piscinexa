{
  "platform_load_error": "Error loading the Piscinexa platform: {error}",
  "title": "Piscinexa",
  "config": {
    "step": {
      "user": {
        "title": "Piscinexa Configuration",
        "description": "Enter the details to configure your pool.",
        "data": {
          "name": "Pool Name",
          "pool_type": "Pool Type",
          "length": "Length (meters)",
          "width": "Width (meters)",
          "diameter": "Diameter (meters)",
          "depth": "Depth (meters)",
          "temperature": "Water Temperature (°C)",
          "temperature_sensor": "Temperature Sensor (optional)",
          "ph_current": "Current pH",
          "ph_sensor": "pH Sensor (optional)",
          "ph_target": "Target pH",
          "chlore_current": "Current Chlorine (mg/L)",
          "chlore_sensor": "Chlorine Sensor (optional)",
          "chlore_target": "Target Chlorine (mg/L)",
          "power_sensor_entity_id": "Power Sensor (optional)"
        }
      }
    },
    "error": {
      "invalid_name": "The pool name must be unique and non-empty.",
      "invalid_dimensions": "Dimensions must be positive numbers.",
      "invalid_temperature": "Temperature must be a number between 0 and 40°C.",
      "invalid_ph": "pH must be a number between 0 and 14.",
      "invalid_chlore": "Chlorine must be a number between 0 and 10 mg/L."
    },
    "abort": {
      "already_configured": "This pool is already configured."
    }
  },
  "sensor": {
    "volume_eau": {
      "name": "Water Volume",
      "unit_of_measurement": "m³"
    },
    "tempsfiltration_recommande": {
      "name": "Recommended Filtration Time",
      "unit_of_measurement": "hours"
    },
    "tempsfiltration_effectue": {
      "name": "Performed Filtration Time",
      "unit_of_measurement": "hours"
    },
    "temperature": {
      "name": "Water Temperature",
      "unit_of_measurement": "°C"
    },
    "etat_temperature": {
      "name": "Temperature State",
      "unit_of_measurement": "",
      "states": {
        "temperature_state_wait": "Wait a bit",
        "temperature_state_good": "It's getting good",
        "temperature_state_relax": "You can relax"
      }
    },
    "ph": {
      "name": "Current pH",
      "unit_of_measurement": ""
    },
    "ph_plus_ajouter": {
      "name": "pH+ to Add",
      "unit_of_measurement": "liters or grams"
    },
    "ph_minus_ajouter": {
      "name": "pH- to Add",
      "unit_of_measurement": "liters or grams"
    },
    "ph_target": {
      "name": "Target pH",
      "unit_of_measurement": ""
    },
    "chlore": {
      "name": "Current Chlorine",
      "unit_of_measurement": "mg/L"
    },
    "chlore_target": {
      "name": "Target Chlorine",
      "unit_of_measurement": "mg/L"
    },
    "chloreaajouter": {
      "name": "Chlorine to Add",
      "unit_of_measurement": "grams or units"
    },
    "chloredifference": {
      "name": "Chlorine Difference",
      "unit_of_measurement": "mg/L"
    },
    "consopuissance": {
      "name": "Power Consumption",
      "unit_of_measurement": "W"
    },
    "pool_state": {
      "name": "Pool State",
      "unit_of_measurement": ""
    },
    "phdifference": {
      "name": "pH Difference",
      "unit_of_measurement": ""
    },
    "ph_treatment": {
      "name": "pH Treatment",
      "unit_of_measurement": ""
    },
    "chlore_treatment": {
      "name": "Chlorine Treatment",
      "unit_of_measurement": ""
    },
    "etat_chlore": {
      "name": "Chlorine State",
      "unit_of_measurement": ""
    },
    "etat_ph": {
      "name": "pH State",
      "unit_of_measurement": ""
    }
  },
  "service": {
    "test_calcul": {
      "name": "Test Calculations",
      "description": "Performs a test of calculations for the pool {name}."
    },
    "reset_valeurs": {
      "name": "Reset Values",
      "description": "Resets the values of the pool {name} to initial settings."
    },
    "apply_treatment": {
      "name": "Apply Treatment",
      "description": "Applies the recommended treatment for the pool {name}."
    }
  },
  "volume_calculation_error": "Error calculating volume for {name}: {error}",
  "temperature_conversion_error": "Error converting temperature for sensor {sensor_id}: {error}",
  "temperature_sensor_unavailable": "Temperature sensor {sensor_id} unavailable.",
  "default_temperature_invalid": "Default temperature is invalid: {error}",
  "non_numeric_sensor_value": "Non-numeric value for sensor {sensor_id}: {state}",
  "non_numeric_power_sensor_value": "Non-numeric value for power sensor {sensor_id}: {error}",
  "filtration_time_read_error": "Error reading filtration time: {error}",
  "filtration_attributes_error": "Error retrieving filtration attributes: {error}",
  "ph_sensor_unavailable": "pH sensor {sensor_id} unavailable.",
  "input_number_missing": "Input_number missing: {entity_id}",
  "input_select_missing": "Input_select missing: {entity_id}",
  "input_number_read_error": "Error reading input_number for {type}: {error}",
  "default_value_read_error": "Error reading default value for {type}: {error}",
  "volume_unavailable_message": "Water volume unavailable",
  "ph_plus_dose_error": "Error calculating pH+ dose for {name}: {error}",
  "ph_plus_unit_error": "Error determining unit for pH+: {error}",
  "ph_attributes_error": "Error retrieving pH attributes: {error}",
  "ph_minus_dose_error": "Error calculating pH- dose for {name}: {error}",
  "ph_minus_unit_error": "Error determining unit for pH-: {error}",
  "ph_minus_attributes_error": "Error retrieving pH- attributes: {error}",
  "chlore_dose_error": "Error calculating chlorine dose for {name}: {error}",
  "chlore_unit_error": "Error determining unit for chlorine: {error}",
  "chlore_attributes_error": "Error retrieving chlorine attributes: {error}",
  "remove_chlorine_message": "Chlorine sufficient, no addition needed.",
  "calculation_error_message": "Calculation error.",
  "chlore_difference_error": "Error calculating chlorine difference for {name}: {error}",
  "power_sensor_read_error": "Error reading power sensor: {error}",
  "pool_state_error": "Error evaluating pool state for {name}: {error}",
  "pool_state_attributes_error": "Error retrieving pool state attributes: {error}",
  "ph_difference_error": "Error calculating pH difference for {name}: {error}",
  "ph_treatment_error": "Error determining pH treatment for {name}: {error}",
  "chlore_treatment_error": "Error determining chlorine treatment for {name}: {error}",
  "chlore_state_error": "Error calculating chlorine state for {name}: {error}",
  "ph_state_error": "Error calculating pH state for {name}: {error}",
  "temperature_state_error": "Error calculating temperature state for {name}: {error}",
  "temperature_unavailable": "Temperature unavailable",
  "temperature_too_cold": "Temperature too cold",
  "temperature_too_hot": "Temperature too hot",
  "temperature_ideal": "Temperature ideal",
  "chlore_unavailable": "Chlorine unavailable",
  "chlore_too_low": "Chlorine too low",
  "chlore_too_high": "Chlorine too high",
  "chlore_ideal": "Chlorine ideal",
  "ph_unavailable": "pH unavailable",
  "ph_too_low": "pH too low",
  "ph_too_high": "pH too high",
  "ph_ideal": "pH ideal",
  "filtration_unavailable": "Filtration unavailable",
  "filtration_insufficient": "Filtration insufficient",
  "filtration_ideal": "Filtration ideal",
  "swimming_allowed": "Swimming allowed",
  "evaluation_error": "Evaluation error",
  "chlore_state_ok": "OK",
  "chlore_state_adjust": "Please adjust chlorine",
  "ph_state_ok": "OK",
  "ph_state_adjust": "Please adjust pH",
  "no_treatment_needed": "No treatment needed",
  "no_action": "No action recorded",
  "test_calcul_called": "Service test_calcul called for pool {name}"
}
